<%= error_messages_for 'part' %>
 
<div class="box tabular">
<p><%= f.text_field :name, :size => 30, :required => true, :label => l(:label_cms_part_name)  %></p>
<p><%= f.select :part_type, options_for_select(parts_type_collection,  @part.part_type), :label => l(:label_cms_part_type) %></p>  

<p><%= f.select :content_type, options_for_select([["Textile", "textile"], ["HTML", "html"], ["CSS", "css"], ["JavaScript", "java_script"]],  @part.content_type), :label => l(:label_cms_part_content_type) %></p>  

<p><%= f.check_box :is_cached, :label => l(:label_cms_is_cached) %></p>

<p id="attachments_form"><label><%= l(:label_attachment_plural) %></label><%= render :partial => 'attachments/form', :locals => {:container => @part} %></p>

<%= text_area_tag 'part[content]', @part.content, :cols => 100, :rows =>  30, :class => 'wiki-edit' %>

<script type="text/javascript">
    function isFullScreen(cm) {
      return /\bCodeMirror-fullscreen\b/.test(cm.getWrapperElement().className);
    }
    function winHeight() {
      return window.innerHeight || (document.documentElement || document.body).clientHeight;
    }

    function setWordWrap(cm)  {
      cm.setOption("lineWrapping", !cm.options.lineWrapping) 
    }


    function setFullScreen(cm, full) {
      var wrap = cm.getWrapperElement();
      if (full) {
        wrap.className += " CodeMirror-fullscreen";
        wrap.className = wrap.className.replace(" cm-s-default", " cm-s-ambiance");
        wrap.style.height = winHeight() + "px";
        document.documentElement.style.overflow = "hidden";
      } else {
        wrap.className = wrap.className.replace(" CodeMirror-fullscreen", "");
        wrap.className = wrap.className.replace(" cm-s-ambiance", " cm-s-default");
        wrap.style.height = "";
        document.documentElement.style.overflow = "";
      }
      cm.refresh();
    }
    CodeMirror.on(window, "resize", function() {
      var showing = document.body.getElementsByClassName("CodeMirror-fullscreen")[0];
      if (!showing) return;
      showing.CodeMirror.getWrapperElement().style.height = winHeight() + "px";
    });

  CodeMirror.defineMode("liquid", function(config, parserConfig) {
    var liquidOverlay = {
      token: function(stream, state) {
        var ch;
        if (stream.match("{{")) {
          while ((ch = stream.next()) != null)
            if (ch == "}" && stream.next() == "}") break;
          stream.eat("}");
          return "liquid";
        }
        while (stream.next() != null && !stream.match("{{", false)) {}
        return null;
      }
    };
    return CodeMirror.overlayMode(CodeMirror.getMode(config, parserConfig.backdrop || "text/html"), liquidOverlay);
  });

  CodeMirror.defineMode("liquid1", function(config, parserConfig) {
    var liquid1Overlay = {
      token: function(stream, state) {
        var ch;
        if (stream.match("{%")) {
          while ((ch = stream.next()) != null)
            if (ch == "%" && stream.next() == "}") break;
          stream.eat("}");
          return "liquid";
        }
        while (stream.next() != null && !stream.match("{%", false)) {}
        return null;
      }
    };
    return CodeMirror.overlayMode(CodeMirror.getMode(config, parserConfig.backdrop || "liquid"), liquid1Overlay);
  });

  var editor = CodeMirror.fromTextArea(document.getElementById("part_content"), {
    mode: "liquid1", 
    tabMode: "indent", 
    lineNumbers: "true",
    autofocus: "true",
    lineWrapping: "true",
    profile: 'xhtml',
    extraKeys: {
        "Shift-Ctrl-W": function(cm) {
          setWordWrap(cm);
        },      
        "Ctrl-F11": function(cm) {
          setFullScreen(cm, !isFullScreen(cm));
        },
        "Esc": function(cm) {
          if (isFullScreen(cm)) setFullScreen(cm, false);
        }
      }    
  });
</script>
</div>


<% content_for :header_tags do %>
  <%= javascript_include_tag 'codemirror/codemirror', :plugin => 'redmine_cms'  %>
  <%= javascript_include_tag 'codemirror/emmet', :plugin => 'redmine_cms'  %>
  <%= javascript_include_tag 'codemirror/addon/mode/overlay', :plugin => 'redmine_cms'  %>
  <%= javascript_include_tag 'codemirror/addon/search/search', :plugin => 'redmine_cms'  %>
  <%= javascript_include_tag 'codemirror/addon/search/searchcursor', :plugin => 'redmine_cms'  %>
  <%= javascript_include_tag 'codemirror/addon/dialog/dialog', :plugin => 'redmine_cms'  %>
  <%= javascript_include_tag 'codemirror/mode/htmlmixed/htmlmixed', :plugin => 'redmine_cms'  %>
  <%= javascript_include_tag 'codemirror/mode/css/css', :plugin => 'redmine_cms'  %>
  <%= javascript_include_tag 'codemirror/mode/xml/xml', :plugin => 'redmine_cms'  %>
  <%= javascript_include_tag 'codemirror/mode/javascript/javascript', :plugin => 'redmine_cms'  %>
  <%= stylesheet_link_tag 'codemirror/codemirror', :plugin => 'redmine_cms'  %>
  <%= stylesheet_link_tag 'codemirror/theme/ambiance', :plugin => 'redmine_cms'  %>
<% end %>

<% content_for :header do %>
  <div class="contextual page-edit" id="float_buttons">
    <%= link_to l(:label_cms_apply), "#", :class => "icon icon-checked", :remote => true, :onclick => "editor.save(); $.ajax({url: '#{escape_javascript url_for(@part)}', type: \'post\', data: $(\'#part_form\').serialize()});return false;"%>
  </div>
<% end %>

